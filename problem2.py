#!/usr/bin/python

"""
Problem 2: Even Fibonacci numbers
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

from timer import timeit

__author__ = "Álvaro González Jiménez"
__license__ = "MIT"
__maintainer__ = "Álvaro González Jiménez"
__email__ = "alvarogonjim95@gmail.com"


@timeit
def even_fibonnaci(exceed):
    fibonacci = {"first": 1, "second": 2}
    # result start with 2 cause is the even number in the list
    result = 2
    while True:
        new_element = fibonacci["first"] + fibonacci["second"]
        # second element pass to be the first one
        fibonacci["first"] = fibonacci["second"]
        # new element is the second
        fibonacci["second"] = new_element
        if new_element > exceed:
            break
        if new_element % 2 == 0:
            result = result + new_element
    return result


print(even_fibonnaci(4000000))
